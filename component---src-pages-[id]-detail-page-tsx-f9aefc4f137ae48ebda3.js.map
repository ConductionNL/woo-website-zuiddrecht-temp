{"version":3,"file":"component---src-pages-[id]-detail-page-tsx-f9aefc4f137ae48ebda3.js","mappings":"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","sources":["webpack://product-website-template/./src/templates/wooItemDetailTemplate/WOOItemDetailTemplate.module.css","webpack://product-website-template/./src/services/getPDFName.ts","webpack://product-website-template/./src/templates/wooItemDetailTemplate/WOOItemDetailTemplate.tsx","webpack://product-website-template/./src/pages/[id]/detailPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var backLink = \"WOOItemDetailTemplate-module--backLink--e33aa\";\nexport var container = \"WOOItemDetailTemplate-module--container--ccf27\";\nexport var content = \"WOOItemDetailTemplate-module--content--29ced\";\nexport var heading1 = \"WOOItemDetailTemplate-module--heading1--ba754\";\nexport var table = \"WOOItemDetailTemplate-module--table--d7844\";\nexport var tableBody = \"WOOItemDetailTemplate-module--tableBody--9d96b\";\nexport var tableRow = \"WOOItemDetailTemplate-module--tableRow--d28f2\";","export const getPDFName = (url: string) => {\r\n  if (!url) return;\r\n\r\n  const finalSlashIndex = url.lastIndexOf(\"/\");\r\n  const pdfName = url.substring(finalSlashIndex + 1);\r\n  return pdfName;\r\n};\r\n","import * as React from \"react\";\nimport * as styles from \"./WOOItemDetailTemplate.module.css\";\nimport _ from \"lodash\";\nimport Skeleton from \"react-loading-skeleton\";\nimport {\n  Page,\n  PageContent,\n  Heading1,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  UnorderedList,\n  UnorderedListItem,\n  Link,\n} from \"@utrecht/component-library-react/dist/css-module\";\nimport { translateDate } from \"../../services/dateFormat\";\nimport { useTranslation } from \"react-i18next\";\nimport { navigate } from \"gatsby\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { QueryClient } from \"react-query\";\nimport { useOpenWoo } from \"../../hooks/openWoo\";\nimport { getPDFName } from \"../../services/getPDFName\";\nimport { HorizontalOverflowWrapper } from \"@conduction/components\";\nimport { removeHTMLFromString } from \"../../services/removeHTMLFromString\";\n\ninterface WOOItemDetailTemplateProps {\n  wooItemId: string;\n}\n\nexport const WOOItemDetailTemplate: React.FC<WOOItemDetailTemplateProps> = ({ wooItemId }) => {\n  const { t, i18n } = useTranslation();\n\n  const queryClient = new QueryClient();\n  const getItems = useOpenWoo(queryClient).getOne(wooItemId);\n\n  const getAttachments = useOpenWoo(queryClient).getAttachments(wooItemId);\n\n  const sortAlphaNum = (a: any, b: any) => a.title.localeCompare(b.title, i18n.language, { numeric: true });\n\n  const sortAttachments = (withLabels: boolean) => {\n    const filterdAttachments = getAttachments.data.results.filter((attachment: any) =>\n      withLabels ? attachment?.labels?.length > 0 : !attachment?.labels || attachment?.labels?.length === 0,\n    );\n\n    let multipleLabels: any[] = [];\n    let singleLabels: any[] = [];\n\n    let allLabels: any[] = [];\n\n    filterdAttachments.map((attachment: any) => {\n      if (attachment.labels.length > 1) {\n        multipleLabels.push(attachment);\n        allLabels.push(...attachment.labels);\n      } else {\n        singleLabels.push(attachment);\n        allLabels.push(attachment.labels[0]);\n      }\n    });\n\n    const newAttachments: any[] = [];\n    multipleLabels.map((attachment: any) => {\n      attachment.labels.map((label: any, idx: number) => {\n        newAttachments.push({\n          ...attachment,\n          labels: [attachment.labels[idx]],\n        });\n      });\n    });\n\n    const attachmentsAll = [...newAttachments, ...singleLabels];\n\n    const uniqueLabels = [...new Set(allLabels)];\n\n    const sortedAttachments = uniqueLabels.map((label: any) => {\n      const attachmentsWithLabel = attachmentsAll.filter((attachment: any) => attachment.labels.includes(label));\n\n      return {\n        attachments: [...attachmentsWithLabel],\n        label,\n      };\n    });\n\n    return withLabels ? sortedAttachments : attachmentsAll;\n  };\n\n  const getLabel = (label: string) => {\n    switch (_.upperFirst(label)) {\n      case \"Informatieverzoek\":\n        return t(\"Information request\");\n      case \"Convenant\":\n        return t(\"Convenant\");\n      case \"Besluit\":\n        return t(\"Decision\");\n      case \"Inventarisatielijst\":\n        return t(\"Inventory list\");\n      default:\n        return t(_.upperFirst(label));\n    }\n  };\n\n  const getName = (name: string) => {\n    const formattedName = name.replace(/_/g, \" \");\n\n    const upperFirstName = _.upperFirst(formattedName);\n\n    switch (upperFirstName) {\n      case \"Bevindingen\":\n        return t(\"Findings\");\n      case \"Conclusies\":\n        return t(\"Conclusions\");\n      case \"Functiebenaming\":\n        return t(\"Job title\");\n      case \"Gedraging\":\n        return t(\"Behavior\");\n      case \"Onderdeel taak\":\n        return t(\"Part of task\");\n      case \"Oordeel\":\n        return t(\"Judgement\");\n      case \"Opdrachtgever\":\n        return t(\"Client\");\n      case \"Organisatieonderdeel\":\n        return t(\"Organizational unit\");\n      default:\n        return t(upperFirstName);\n    }\n  };\n\n  function isDate(str: string): boolean {\n    // Check for ISO date format (YYYY-MM-DD) or common date formats\n    const dateRegex = /^\\d{4}-\\d{2}-\\d{2}|^\\d{4}\\/\\d{2}\\/\\d{2}/;\n    if (!dateRegex.test(str)) return false;\n\n    const date = new Date(str);\n    return !isNaN(date.getTime()) && date.toISOString().slice(0, 10) === str.slice(0, 10);\n  }\n\n  const getExtension = (attachment: any) => {\n    if (attachment.extension) {\n      return attachment.extension;\n    } else {\n      return attachment.type.split(\"/\").pop();\n    }\n  };\n\n  const checkIfVisible = (property: any) => {\n    return getItems.data[\"@self\"].schema.properties[property].visible !== false;\n  };\n\n  const orderProperties = (data: any) => {\n    const excludeKeys = [\n      \"@self\",\n      \"title\",\n      \"titel\",\n      \"name\",\n      \"naam\",\n      \"id\",\n      ...Object.keys(getItems.data[\"@self\"].schema.properties).filter((key) => !checkIfVisible(key)),\n    ];\n\n    const enrichedData = {\n      publicatieDatum: data[\"@self\"]?.published,\n      categorie: data[\"@self\"]?.schema?.title,\n      ...data,\n    };\n\n    return Object.entries(enrichedData)\n      .filter(([key]) => !excludeKeys.includes(key))\n      .sort((a, b) => {\n        const orderA = data[\"@self\"]?.schema?.properties?.[a[0]]?.order;\n        const orderB = data[\"@self\"]?.schema?.properties?.[b[0]]?.order;\n\n        // If both have valid non-zero orders, sort normally\n        if (orderA && orderB && orderA !== 0 && orderB !== 0) {\n          return orderA - orderB;\n        }\n\n        // If orderA is valid and non-zero, it comes first\n        if (orderA && orderA !== 0) return -1;\n        // If orderB is valid and non-zero, it comes first\n        if (orderB && orderB !== 0) return 1;\n\n        // If orderA is 0 and orderB is null/undefined, orderA comes first\n        if (orderA === 0 && !orderB) return -1;\n        // If orderB is 0 and orderA is null/undefined, orderB comes first\n        if (orderB === 0 && !orderA) return 1;\n\n        // If both are 0 or both are null/undefined, maintain original order\n        return 0;\n      })\n      .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n  };\n\n  return (\n    <Page>\n      <PageContent className={styles.container}>\n        <div role=\"navigation\">\n          <Link\n            className={styles.backLink}\n            href=\"/\"\n            onClick={(e: any) => {\n              e.preventDefault(), navigate(\"/\");\n            }}\n            tabIndex={0}\n            aria-label={t(\"Back to homepage\")}\n          >\n            <FontAwesomeIcon icon={faArrowLeft} /> <span>{t(\"Back to homepage\")}</span>\n          </Link>\n        </div>\n\n        {getItems.isSuccess && getItems.data && (\n          <div className={styles.content} role=\"region\" aria-label={t(\"Details\")}>\n            <Heading1\n              id=\"mainContent\"\n              tabIndex={0}\n              aria-label={`${t(\"Title of woo request\")}, ${getItems.data.title ?? getItems.data.titel ?? getItems.data.name ?? getItems.data.naam ?? getItems.data.id}`}\n            >\n              {removeHTMLFromString(\n                removeHTMLFromString(\n                  getItems.data.title ??\n                    getItems.data.titel ??\n                    getItems.data.name ??\n                    getItems.data.naam ??\n                    getItems.data.id,\n                ),\n              )}\n            </Heading1>\n\n            <HorizontalOverflowWrapper\n              ariaLabels={{\n                scrollLeftButton: t(\"Scroll table to the left\"),\n                scrollRightButton: t(\"Scroll table to the right\"),\n              }}\n            >\n              <Table className={styles.table}>\n                <TableBody className={styles.tableBody}>\n                  {getItems.data &&\n                    Object.entries(orderProperties(getItems.data)).map(([key, value]: [string, any]) => {\n                      if (!!value) {\n                        let formattedValue: string;\n                        if (\n                          !value ||\n                          (typeof value === \"string\" && value.trim() === \"\") ||\n                          (Array.isArray(value) && value.length === 0) ||\n                          (typeof value === \"object\" && value !== null && Object.keys(value).length === 0)\n                        ) {\n                          return;\n                        }\n\n                        if (typeof value === \"string\") {\n                          const isValidDate = isDate(value);\n                          formattedValue = isValidDate ? translateDate(i18n.language, value) ?? \"-\" : value;\n                        } else if (Array.isArray(value)) {\n                          if (key === \"themes\" || key === \"themas\") {\n                            return (\n                              !_.isEmpty(value) && (\n                                <TableRow\n                                  key={key}\n                                  className={styles.tableRow}\n                                  tabIndex={0}\n                                  aria-labelledby={\"themesName themesData\"}\n                                >\n                                  <TableCell id=\"themesName\">{t(\"Themes\")}</TableCell>\n                                  <TableCell id=\"themesData\">\n                                    {value.map((theme: any, idx: number) => (\n                                      <span key={idx}>\n                                        {theme.title ? theme.title + (idx !== value?.length - 1 ? \", \" : \"\") : theme}\n                                      </span>\n                                    ))}\n                                  </TableCell>\n                                </TableRow>\n                              )\n                            );\n                          } else {\n                            formattedValue = value.map((item: any) => item.title).join(\", \");\n                          }\n                        } else if (typeof value === \"object\") {\n                          formattedValue = JSON.stringify(value);\n                        } else {\n                          formattedValue = String(value);\n                        }\n\n                        return (\n                          <TableRow\n                            key={key}\n                            className={styles.tableRow}\n                            tabIndex={0}\n                            aria-label={`${getName(key)}, ${formattedValue}`}\n                          >\n                            <TableCell>{getName(key)}</TableCell>\n                            <TableCell>{formattedValue}</TableCell>\n                          </TableRow>\n                        );\n                      }\n                    })}\n\n                  {getAttachments.isSuccess &&\n                    sortAttachments(true).length > 0 &&\n                    sortAttachments(true).map((sortedAttachments: any, idx: number) => (\n                      <TableRow\n                        className={styles.tableRow}\n                        key={idx}\n                        tabIndex={0}\n                        aria-label={\n                          sortedAttachments.attachments.length === 1\n                            ? `${getLabel(sortedAttachments.label)}, ${\n                                sortedAttachments.attachments[0].title ??\n                                getPDFName(sortedAttachments.attachments[0].accessUrl)\n                              }`\n                            : `${getLabel(sortedAttachments.label)}, ${t(\"There are\")} ${\n                                sortedAttachments.attachments.length\n                              } ${t(\"Attachments\")} ${t(\"With the label\")} ${getLabel(\n                                sortedAttachments.label,\n                              )}, ${t(\"These are\")} ${sortedAttachments.attachments\n                                .map((attachment: any) => attachment.title ?? getPDFName(attachment.accessUrl))\n                                .join(\", \")}`\n                        }\n                      >\n                        <TableCell>{getLabel(sortedAttachments.label)}</TableCell>\n\n                        {sortedAttachments.attachments.length > 1 && (\n                          <TableCell>\n                            <UnorderedList id=\"labelAttachmentsData\">\n                              {sortedAttachments.attachments.map((attachment: any, idx: number) => (\n                                <UnorderedListItem key={idx}>\n                                  <Link href={attachment.accessUrl} target=\"blank\">\n                                    {`${attachment.title ?? getPDFName(attachment.accessUrl)}`}\n                                  </Link>\n                                </UnorderedListItem>\n                              ))}\n                            </UnorderedList>\n                          </TableCell>\n                        )}\n                        {sortedAttachments.attachments.length === 1 && (\n                          <TableCell>\n                            <Link href={sortedAttachments.attachments[0].accessUrl} target=\"blank\">\n                              {`${sortedAttachments.attachments[0].title ?? getPDFName(sortedAttachments.attachments[0].accessUrl)}`}\n                            </Link>\n                          </TableCell>\n                        )}\n                      </TableRow>\n                    ))}\n\n                  {getAttachments.isSuccess && !_.isEmpty(sortAttachments(false)) && (\n                    <TableRow\n                      className={styles.tableRow}\n                      tabIndex={0}\n                      aria-labelledby=\"attachmentsName attachmentsData\"\n                    >\n                      <TableCell id=\"attachmentsName\">{t(\"Attachments\")}</TableCell>\n                      <TableCell>\n                        <UnorderedList id=\"attachmentsData\">\n                          {sortAttachments(false)\n                            .sort(sortAlphaNum)\n                            .map(\n                              (bijlage: any, idx: number) =>\n                                bijlage.title && (\n                                  <UnorderedListItem key={idx}>\n                                    <Link\n                                      href={bijlage.accessUrl?.length !== 0 ? bijlage.accessUrl : \"#\"}\n                                      target={bijlage.accessUrl?.length !== 0 ? \"blank\" : \"\"}\n                                    >\n                                      {bijlage.title}\n                                    </Link>\n                                  </UnorderedListItem>\n                                ),\n                            )}\n                        </UnorderedList>\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </HorizontalOverflowWrapper>\n          </div>\n        )}\n        {getItems.isLoading && <Skeleton height={\"200px\"} />}\n      </PageContent>\n    </Page>\n  );\n};\n","import * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { PageProps } from \"gatsby\";\r\nimport { WOOItemDetailTemplate } from \"../../templates/wooItemDetailTemplate/WOOItemDetailTemplate\";\r\n\r\nconst DetailPage: React.FC<PageProps> = (props: PageProps) => {\r\n  return <WOOItemDetailTemplate wooItemId={props.params.id} />;\r\n};\r\nexport default DetailPage;\r\n"],"names":["tableRow","getPDFName","url","finalSlashIndex","lastIndexOf","substring","WOOItemDetailTemplate","_ref","_ref4","_ref5","_ref6","_getItems$data$title","_ref7","_ref8","_ref9","_getItems$data$title2","wooItemId","t","i18n","useTranslation","queryClient","QueryClient","getItems","useOpenWoo","getOne","getAttachments","sortAttachments","withLabels","filterdAttachments","data","results","filter","attachment","_attachment$labels","_attachment$labels2","labels","length","multipleLabels","singleLabels","allLabels","map","push","apply","_toConsumableArray","newAttachments","label","idx","attachmentsAll","concat","sortedAttachments","Set","attachmentsWithLabel","includes","attachments","getLabel","_upperFirst","getName","name","formattedName","replace","upperFirstName","_jsx","Page","children","_jsxs","PageContent","className","role","Link","href","onClick","e","preventDefault","navigate","tabIndex","FontAwesomeIcon","icon","faArrowLeft","isSuccess","Heading1","id","title","titel","naam","removeHTMLFromString","HorizontalOverflowWrapper","ariaLabels","scrollLeftButton","scrollRightButton","Table","TableBody","Object","entries","_data$Self","_data$Self2","_data$Self2$schema","excludeKeys","keys","schema","properties","key","property","visible","enrichedData","publicatieDatum","published","categorie","_ref2","sort","a","b","_data$Self3","_data$Self3$schema","_data$Self3$schema$pr","_data$Self3$schema$pr2","_data$Self4","_data$Self4$schema","_data$Self4$schema$pr","_data$Self4$schema$pr2","orderA","order","orderB","reduce","acc","_ref3","value","orderProperties","_ref10","formattedValue","trim","Array","isArray","_translateDate","str","test","date","Date","isNaN","getTime","toISOString","slice","isDate","translateDate","language","_isEmpty","TableRow","styles","TableCell","theme","item","join","JSON","stringify","String","_sortedAttachments$at","_sortedAttachments$at2","accessUrl","_attachment$title","UnorderedList","_attachment$title2","UnorderedListItem","target","sortAlphaNum","localeCompare","numeric","bijlage","_bijlage$accessUrl","_bijlage$accessUrl2","isLoading","Skeleton","height","props","params"],"sourceRoot":""}